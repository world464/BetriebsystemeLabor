Nr.1a)
Lesen Sie sich die Dokumentation zum System Call pipe() mittels man 2 pipe sowie die
generelle Dokumentation zu Pipes mittels man 7 pipe durch.
Was ist das Argument des System Calls?
    - Pipe(2) hier 2, es werden zwei Filedeskriptoren erstellt für das Read End und Write End.

Was ist das Schreib- und was das Leseende der Pipe?
    - The array pipefd is used to return  two  file  descriptors referring  to the ends of the pipe.
    - pipefd[0] refers to the read end of the pipe.
    - pipefd[1] refers to the write end of the pipe.

Kann eine Pipe auch bidirektional verwendet werden?
    - Nein, eine Pipe ist unidirektional also hat nur eine Richtung in der Nachrichten versendet werden können.

Falls nein, wie kann man eine bidirektionale Kommunikation
zwischen Prozessen realisieren?
    - Man kann zwei Pipes gleichzeitig öffnen von zwei kommunizierenden Prozessen.
    Jeweils ein Schreib und Lesende zuordenen, damit können beide Prozesse sich gegenseitig
    Narichten schicken.

Nr. 2 a)
Wie wird das Lesen und Schreiben auf eine Named Pipe realisiert?
    -  Nachdem ein spezielles Fifo File erstellt wurde, kann jeder Prozess es öffnen um es zu lesen oder schreiben
    wie eine normale Datei.
    -  Es muss an beiden Enden gleichzeitig geöffnet werden, befor eine I/O Operation geöffnet werden kann.
    Andernfalls blockiert es und wartet auf den anderen Prozess.

Wie kann eine Named Pipe wieder geschlossen und gelöscht werden?

 TODO: keine Ahnung

 Nr. 2b)
Mkfifo Datei erstellen mit einem pathname: mkfifo <name>

                    -m, --mode=MODE
                          set file permission bits to MODE, not a=rw - umask

                   -Z     set the SELinux security context to default type

                   --context[=CTX]
                          like -Z, or if CTX is specified then set the SELinux or SMACK security con‐
                          text to CTX

                   --help display this help and exit

                   --version
                          output version information and exit